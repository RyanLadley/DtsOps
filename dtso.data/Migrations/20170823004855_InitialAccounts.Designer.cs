// <auto-generated />
using dtso.data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace dtso.data.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20170823004855_InitialAccounts")]
    partial class InitialAccounts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dtso.data.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AnnualBudget")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Description");

                    b.Property<int>("RegionalAccountCodeId");

                    b.Property<int?>("ShredNo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(-1);

                    b.Property<int?>("SubNo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(-1);

                    b.HasKey("AccountId");

                    b.HasIndex("RegionalAccountCodeId", "SubNo", "ShredNo")
                        .IsUnique()
                        .HasFilter("[SubNo] IS NOT NULL AND [ShredNo] IS NOT NULL");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("dtso.data.Entities.RegionalAccountCode", b =>
                {
                    b.Property<int>("RegionalAccountCodeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountNumber");

                    b.Property<string>("AccountPrefix")
                        .IsRequired();

                    b.Property<int>("DeptartmentNumber");

                    b.Property<int>("FundNumber");

                    b.Property<string>("ProjectDescription");

                    b.Property<string>("ProjectNumber")
                        .IsRequired();

                    b.HasKey("RegionalAccountCodeId");

                    b.ToTable("RegionalAccountCodes");
                });

            modelBuilder.Entity("dtso.data.Entities.Account", b =>
                {
                    b.HasOne("dtso.data.Entities.RegionalAccountCode", "RegionalAccountCode")
                        .WithMany()
                        .HasForeignKey("RegionalAccountCodeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
